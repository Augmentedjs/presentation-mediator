{"version":3,"sources":["webpack://presentation-mediator/webpack/universalModuleDefinition","webpack://presentation-mediator/webpack/bootstrap","webpack://presentation-mediator/./src/colleague.js","webpack://presentation-mediator/./src/index.js","webpack://presentation-mediator/./src/mediator.js","webpack://presentation-mediator/external {\"commonjs\":\"augmentedjs-next\",\"commonjs2\":\"augmentedjs-next\",\"amd\":\"augmentedjs-next\",\"root\":\"Augmented\"}","webpack://presentation-mediator/external {\"commonjs\":\"presentation-view\",\"commonjs2\":\"presentation-view\",\"amd\":\"presentation-view\",\"root\":\"presentation-view\"}"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE__3__","__WEBPACK_EXTERNAL_MODULE__4__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_presentationView","View","constructor","super","options","mediator","_mediator","sendMessage","trigger","message","data","console","setMediatorMessageQueue","_dismissMe","removeMediatorMessageQueue","Mediator","Colleague","Augmented","DEFAULT_CHANNEL","DEFAULT_IDENTIFIER","default","el","_defaultChannel","_defaultIdentifier","_channels","_colleagueMap","_subscriptions","colleague","channel","myChannelObject","unsubscribe","fn","identifier","delegateEvents","events","subscriptions","undelegateEvents","unsetSubscriptions","length","subscription","once","$once","subscribe","observeColleague","callback","observeColleagueAndTrigger","args","dismissColleague","dismissColleagueTrigger","id","obj","context","push","on","publish","myArgs","slice","splice","subscribeOnce","getColleagues","getChannel","channels","defaultChannel","defaultIdentifier"],"mappings":"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","file":"presentation-mediator.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"augmentedjs-next\"), require(\"presentation-view\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"presentation-mediator\", [\"augmentedjs-next\", \"presentation-view\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"presentation-mediator\"] = factory(require(\"augmentedjs-next\"), require(\"presentation-view\"));\n\telse\n\t\troot[\"presentation-mediator\"] = factory(root[\"Augmented\"], root[\"presentation-view\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE__3__, __WEBPACK_EXTERNAL_MODULE__4__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","import { View } from \"presentation-view\";\n\n/**\n * <em>Colleague View</em> &mdash; The 'child' view.<br/>\n * The Colleague communicates with other Colleagues through its Mediator.\n *\n * @extends Presentation.View\n */\nclass Colleague extends View {\n  constructor(options) {\n    super(options);\n    if (options && options.mediator) {\n      this._mediator = mediator;\n    } else {\n      this._mediator = null;\n    }\n  };\n\n  /**\n   * Send a message to the mediator's queue\n   * @param {string} message Message to send\n   * @param {object} data Data to send with message\n   */\n  sendMessage(message, data) {\n    if (this._mediator) {\n      this._mediator.trigger(message, data);\n    } else {\n      console.warn(`sendMessage: No mediator is available for ${this.name}, talking to myself.`);\n    }\n  };\n\n  /**\n   * Set the mediator to this colleague\n   * @param {Mediator} mediator The mediator\n   */\n  setMediatorMessageQueue(mediator) {\n    //console.debug(`setMediatorMessageQueue: ${this.name} has a mediator? ${(this._mediator !== null)} and a mediator was passed? ${(mediator !== null)}`);\n    if (mediator) {\n      if (this._mediator) {\n        // already registered, send a dismiss message\n        //console.debug(`${this.name} already registered, send a dismiss message.`);\n        this._mediator._dismissMe(this);\n      }\n      this._mediator = mediator;\n    }\n  };\n\n  /**\n   * Remove the mediator from this colleague\n   */\n  removeMediatorMessageQueue() {\n    this._mediator = null;\n  };\n\n  /**\n   * @property {Mediator} mediator\n   * Read only property of the mediator\n   */\n  get mediator() {\n    return this._mediator;\n  };\n};\n\nexport default Colleague;\n","import Mediator from \"./mediator.js\";\nimport Colleague from \"./colleague.js\";\n\nmodule.exports.Mediator = Mediator;\nmodule.exports.Colleague = Colleague;\n","import * as Augmented from \"augmentedjs-next\";\nimport Colleague from \"./colleague.js\";\n\nconst DEFAULT_CHANNEL = \"augmentedChannel\";\nconst DEFAULT_IDENTIFIER = \"augmentedIdentifier\";\n\n/**\n * Mediator View - The mediator in the Mediator Pattern<br/>\n * The mediator defines the interface for communication between colleague views.\n * Loose coupling between colleague objects is achieved by having colleagues communicate\n * with the Mediator, rather than with each other.\n * <pre>\n * [Mediator]<-----[Colleague]\n *     ^-----------[Colleague]\n * </pre>\n * @memberof Presentation\n * @extends Colleague\n */\nclass Mediator extends Colleague {\n  constructor(options) {\n    if (!options) {\n      options = {};\n    }\n    if (!options.el) {\n      options.noEL = true;\n    }\n    super(options);\n    this._defaultChannel = DEFAULT_CHANNEL;\n    this._defaultIdentifier = DEFAULT_IDENTIFIER;\n    this._channels = {};\n    this._colleagueMap = {};\n    this._subscriptions = {};\n  };\n\n  /**\n   * Default Channel Property\n   * @property {string} defaultChannel The default channel for the view\n   * @private\n   */\n\n  /**\n   * Default identifier Property\n   * @property {string} defaultIdentifier The default identifier for the view\n   * @private\n   */\n\n  /**\n   * Channels Property\n   * @property {object} _channels The channels for the view (object array)\n   * @private\n   */\n\n  /**\n   * Colleague Map Property\n   * @property {object} _colleagueMap The colleagues observed by index in the channel\n   * @private\n   */\n\n  /**\n   * @property {Object} _subscriptions List of subscriptions\n   * @private\n   */\n\n  /**\n   * Dismiss a colleage\n   * @private\n   */\n  _dismissMe(colleague) {\n    if (colleague instanceof Colleague) {\n      let channel = this._colleagueMap[colleague], myChannelObject = this._channels[channel];\n      this.unsubscribe(channel, myChannelObject.fn, colleague, myChannelObject.identifier);\n    }\n  };\n\n  /**\n   * Extend delegateEvents() to set subscriptions\n   * @param {array} event The events to undelegate\n   */\n  delegateEvents(events) {\n    super.delegateEvents(events);\n    this.subscriptions = {};\n  };\n\n  /**\n   * Extend undelegateEvents() to unset subscriptions\n   * @param {array} event The events to undelegate\n   */\n  undelegateEvents(events) {\n    super.undelegateEvents(events);\n    this.unsetSubscriptions();\n  };\n\n  /**\n   * Subscriptions\n   * @property {array} subscriptions\n   */\n  get subscriptions() {\n    return this._subscriptions;\n  };\n\n  set subscriptions(subscriptions) {\n    if (subscriptions) {\n      Augmented.Utility.extend(this._subscriptions || {}, subscriptions);\n    }\n    subscriptions = subscriptions || this._subscriptions;\n    if (!subscriptions || (subscriptions.length === 0)) {\n      return;\n    }\n    // Just to be sure we don't set duplicate\n    this.unsetSubscriptions(subscriptions);\n\n    let i = 0, l = subscriptions.length;\n    for (i = 0; i < l; i++) {\n      let subscription = subscriptions[i];\n      let once = false;\n      if (subscription.$once) {\n        subscription = subscription.$once;\n        once = true;\n      }\n      if (typeof subscription === 'string') {\n        subscription = this[subscription];\n      }\n      this.subscribe(subscription.channel, subscription, this, once);\n    }\n  };\n\n  /**\n   * Unsubscribe to each subscription\n   * @param {Object} [subscriptions] An optional hash of subscription to remove\n   */\n  unsetSubscriptions(subscriptions) {\n    subscriptions = subscriptions || this._subscriptions;\n    if (!subscriptions || (subscriptions.length === 0)) {\n      return;\n    }\n\n    let i = 0;\n    const l = subscriptions.length;\n\n    for (i = 0; i < l; i++) {\n      let subscription = subscriptions[i];\n      let once = false;\n      if (subscription.$once) {\n        subscription = subscription.$once;\n        once = true;\n      }\n      if (typeof subscription == 'string') {\n        subscription = this[subscription];\n      }\n      this.unsubscribe(subscription.channel, subscription.$once || subscription, this);\n    }\n  };\n\n  /**\n   * Observe a Colleague View - observe a Colleague and add to a channel\n   * @param {Colleague} colleague The Colleague to observe\n   * @param {function} callback The callback to call for this colleague\n   * @param {string} channel The Channel to add the pubished events to\n   * @param {string} identifier The identifier for this function\n   */\n  observeColleague(colleague, callback, channel, identifier) {\n    if (colleague instanceof Colleague) {\n      if (!channel) {\n        channel = this._defaultChannel;\n      }\n      colleague.setMediatorMessageQueue(this);\n      this.subscribe(channel, callback, colleague, false, (identifier) ? identifier : this._defaultIdentifier);\n    }\n  };\n\n  /**\n   * Observe a Colleague View - observe a Colleague and add to a channel and auto trigger events\n   * @param {Colleague} colleague The Colleague to observe\n   * @param {string} channel The Channel to add the pubished events to\n   * @param {string} identifier The identifier for this function\n   */\n  observeColleagueAndTrigger(colleague, channel, identifier) {\n    //console.debug(\"this\", this);\n    //console.debug(\"colleague\", colleague);\n    this.observeColleague(\n      colleague,\n      (...args) => {\n        //console.debug(\"triggered!\", args[0]);\n        //console.debug(\"this\", this);\n        //console.debug(\"colleague\", colleague);\n        colleague.trigger(channel, args[0]); //arguments[0], arguments[1]);\n      },\n      channel,\n      (identifier) ? identifier : this._defaultIdentifier\n    );\n  };\n\n  /**\n   * Dismiss a Colleague View - Remove a Colleague from the channel\n   * @param {Presentation.Colleague} colleague The Colleague to observe\n   * @param {function} callback The callback to call on channel event\n   * @param {string} channel The Channel events are pubished to\n   * @param {string} identifier The identifier for this function\n   */\n  dismissColleague(colleague, callback, channel, identifier) {\n    if (colleague instanceof Colleague) {\n      if (!channel) {\n        channel = this._defaultChannel;\n      }\n      colleague.removeMediatorMessageQueue();\n      this.unsubscribe(channel, callback, colleague, identifier);\n    }\n  };\n\n  /**\n   * Dismiss a Colleague View - Remove a Colleague from the channel that has an auto trigger\n   * @param {Colleague} colleague The Colleague to observe\n   * @param {string} channel The Channel events are pubished to\n   * @param {string} identifier The identifier for this function\n   */\n  dismissColleagueTrigger(colleague, channel, identifier) {\n    let id = (identifier) ? identifier : this._defaultIdentifier;\n    this.dismissColleague(\n      colleague,\n      (...args) => {\n        colleague.trigger(args[0], args[1]);//arguments[0], arguments[1]);\n      },\n      channel,\n      id\n    );\n  };\n\n  /**\n   * Subscribe to a channel\n   * @param {string} channel The Channel events are pubished to\n   * @param {function} callback The callback to call on channel event\n   * @param {object} context The context (or 'this')\n   * @param {boolean} once Toggle to set subscribe only once\n   * @param {string} identifier The identifier for this function\n   */\n  subscribe(channel, callback, context, once, identifier) {\n    ////console.log(\"subscribe: callback\", callback);\n    if (!this._channels[channel]) {\n      this._channels[channel] = [];\n    }\n\n    const obj = {\n      fn: callback,\n      // TODO: the context set to 'this' may be the source of the edge case mediator instance for a channel\n      context: context || this,\n      once: once,\n      identifier: (identifier) ? identifier : this._defaultIdentifier\n    };\n    this._channels[channel].push(obj);\n    this._colleagueMap[context] = channel;\n    this.on(channel, this.publish, context);\n  };\n\n  /**\n   * Trigger all callbacks for a channel\n   * @param {string} channel The Channel events are pubished to\n   * @param {object} N Extra parameter to pass to handler\n   */\n  publish(channel, ...args) {\n    if (!channel || !this._channels || !this._channels[channel]) {\n      console.warn(`Mediator ${this.name}: channel ${channel} doest exist.`);\n      this._channels = {};\n      return;\n    }\n\n    let myArgs = [].slice.call(args, 1), subscription;\n    //console.log(\"args\", myArgs);\n    let i = 0;\n    const l = this._channels[channel].length;\n\n    for (i = 0; i < l; i++) {\n      subscription = this._channels[channel][i];\n      if (subscription) {\n        //console.log(\"subscription\", subscription);\n        if (subscription.fn) {\n          //console.log(\"calling\", subscription.fn);\n          //subscription.fn(args);\n          subscription.fn.apply(subscription.context, myArgs);\n        }\n        if (subscription.once) {\n          this.unsubscribe(channel, subscription.fn, subscription.context, subscription.identifier);\n          i--;\n        }\n      } else {\n        //_logger.warn(\"AUGMENTED: Mediator: No subscription for channel '\" + channel + \"' on row \" + i);\n      }\n    }\n  };\n\n  /**\n   * Cancel subscription\n   * @param {string} channel The Channel events are pubished to\n   * @param {function} callback The function callback regestered\n   * @param {object} context The context (or 'this')\n   * @param {string} identifier The identifier for this function\n   */\n  unsubscribe(channel, callback, context, identifier) {\n    if (!this._channels[channel]) {\n      return;\n    }\n\n    let id = (identifier) ? identifier : this._defaultIdentifier;\n\n    let subscription, i = 0;\n    for (i = 0; i < this._channels[channel].length; i++) {\n      subscription = this._channels[channel][i];\n      if (subscription) {\n        if (subscription.identifier === id && subscription.context === context) {\n          // originally compared function callbacks, but we don't always pass one so use identifier\n          this._channels[channel].splice(i, 1);\n          i--;\n\n          delete this._colleagueMap[subscription.context];\n        }\n      } else {\n        //_logger.warn(\"AUGMENTED: Mediator: No subscription for channel '\" + channel + \"' on row \" + i);\n        //logger.debug(\"AUGMENTED: Mediator: subscription \" + this._channels[channel]);\n      }\n    }\n  };\n\n  /**\n   * Subscribing to one event only\n   * @param {string} channel The Channel events are pubished to\n   * @param {string} subscription The subscription to subscribe to\n   * @param {object} context The context (or 'this')\n   * @param {string} identifier The identifier for this function\n   */\n  subscribeOnce(channel, subscription, context, identifier) {\n    this.subscribe(channel, subscription, context, true, identifier);\n  };\n\n  /**\n   * Get All the Colleagues for a channel\n   * @param {string} channel The Channel events are pubished to\n   * @returns {array} The colleagues for a channel\n   */\n  getColleagues(channel) {\n    const c = this.getChannel(channel);\n    return (c) ? c.context : null;\n  };\n\n  /**\n   * Get Channels\n   * @returns {object} Returns all the channels\n   */\n  get channels() {\n    return this._channels;\n  };\n\n  /**\n   * Get a specific channel\n   * @param {string} channel The Channel events are pubished to\n   * @returns {array} Returns the requested channel or null if nothing exists\n   */\n  getChannel(channel) {\n    if (!channel) {\n      channel = this._defaultChannel;\n    }\n    return (this._channels[channel]) ? (this._channels[channel]) : null;\n  };\n\n  /**\n   * Get the default channel<br/>\n   * Convenience method for _.channel = null;\n   * @property {array} Returns the default channel or null if nothing exists\n   */\n  get defaultChannel() {\n    return this.getChannel(this._defaultChannel);\n  };\n\n  /**\n   * Get the default identifier\n   * @property {string} Returns the default identifier\n   */\n  get defaultIdentifier() {\n    return this._defaultIdentifier;\n  };\n};\n\nexport default Mediator;\n","module.exports = __WEBPACK_EXTERNAL_MODULE__3__;","module.exports = __WEBPACK_EXTERNAL_MODULE__4__;"],"sourceRoot":""}